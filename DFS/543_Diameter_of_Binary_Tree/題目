＃難度： Medium

＃題目說明： 
- 給一顆 tree 找到最大的直徑，就是左樹和右數最大的深度

＃ Constraints
The number of nodes in the tree is in the range [1, 10^4].
-100 <= Node.val <= 100

＃例子
Input: root = [1,2,3,4,5]
Output: 3

        1
       / \
      2   3
     / \
    4   5

最長直徑出現在 root，左樹深度 2 和右樹深度 1
最長直徑就是 2 + 1 = 3


＃想法
- 用 DFS 遍歷節點，在每個節點檢查其左樹深度和右數深度
- 用一個 diameter 遍歷時更新最大值
- 回傳 diameter   
 
＃ 時間複雜度
如果說找深度是一個 DFS，其時間複雜度是 O(n)，
那找 diameter 就等於在每個節點上都找左右 subtree 的深度，
又因為左右 subtree 的節點數一定小於整棵樹的節點數 n
那整個複雜度就大致可以簡化為 O(n^2) 



    


 


